{"version":3,"sources":["pages/ReflectPage.js","pages/Home.js","api/userAPI.js","api/authAPI.js","context/FirebaseAuthState.js","components/Navbar.js","pages/SignInPage.js","pages/SignUpPage.js","Navigation.js","App.js","index.js","context/index.js","components/Spacer.js","components/formFormik.js","api/entriesAPI.js"],"names":["questions","text","type","num","height","width","justify","ReflectPage","authorized","useContext","Context","state","useState","isError","setIsError","router","useHistory","schema","yup","answer0","required","answer1","min","max","answer2","answer3","answer4","answer5","answer6","answer7","answer8","answer9","formik","useFormik","initialValues","onSubmit","values","a","data","date","Date","toISOString","username","user","_id","responses","question","answer","postNewEntry","status","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","push","error","console","log","validationSchema","className","handleSubmit","map","q","formikProps","getFieldProps","name","eval","test","getServerSideProps","context","cookies","parseCookies","axios","get","headers","token","ok","props","redirect","permanent","destination","Home","useQuery","getUserEntries","isLoading","updateUser","window","location","reload","pathname","entries","Users","create","baseURL","id","post","response","Auth","interceptors","request","use","config","getAuth","currentUser","getIdToken","err","Promise","reject","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FirebaseAuthState","children","dispatch","useEffect","initializeApp","auth","onIdTokenChanged","getIdTokenResult","destroyCookie","setCookie","payload","Navbar","handleLogOut","tab","useLocation","mobileHighlighted","mobileDefault","navHighlightedStyle","navDefaultStyle","as","open","to","href","onClick","Button","Panel","email","SignInPage","password","signInUser","signInWithEmailAndPassword","placeholder","msg","Spacer","SignUpPage","confirmPassword","value","this","parent","registerUser","createUserWithEmailAndPassword","Navigation","path","queryClient","QueryClient","App","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById","reducer","action","initialState","createContext","Provider","useReducer","style","FormFormik","htmlFor","resize","outline","slice","Entries"],"mappings":"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","file":"static/js/main.524ed1c1.chunk.js","sourcesContent":["import { parseCookies } from \"nookies\";\nimport axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport FormFormik from \"../components/formFormik\";\nimport Spacer from \"../components/Spacer\";\nimport { Context } from \"../context/index\";\nimport { postNewEntry } from \"../api/entriesAPI\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst questions = [\n    {\n        text: \"Are you on the right path? Why?\",\n        type: \"textarea\",\n        num: 0,\n        height: \"h-96\",\n    },\n    {\n        text: \"Out of 10, how productive were you today?\",\n        type: \"number\",\n        num: 1,\n        height: \"h-12\",\n        width: \"w-24\",\n        justify: \"self-start\",\n    },\n    {\n        text: \"What went well today?\",\n        type: \"textarea\",\n        num: 2,\n        height: \"h-48\",\n    },\n    {\n        text: \"What went poorly today?\",\n        type: \"textarea\",\n        num: 3,\n        height: \"h-48\",\n    },\n    {\n        text: \"Did you do anything different today?\",\n        type: \"textarea\",\n        num: 4,\n        height: \"h-48\",\n    },\n    {\n        text: \"What did you learn today?\",\n        type: \"textarea\",\n        num: 5,\n        height: \"h-96\",\n    },\n    {\n        text: \"What could you do better tomorrow?\",\n        type: \"textarea\",\n        num: 6,\n        height: \"h-48\",\n    },\n    {\n        text: \"What are you grateful for?\",\n        type: \"textarea\",\n        num: 7,\n        height: \"h-96\",\n    },\n    {\n        text: \"What should you do tomorrow?\",\n        type: \"textarea\",\n        num: 8,\n        height: \"h-24\",\n    },\n    {\n        text: \"Where are you not being honest with yourself?\",\n        type: \"textarea\",\n        num: 9,\n        height: \"h-96\",\n    },\n];\n\nexport default function ReflectPage({ authorized }) {\n    const { state } = useContext(Context);\n    const [isError, setIsError] = useState(false);\n    const router = useHistory();\n\n    const schema = yup.object({\n        answer0: yup.string().required(\"This answer is required.\"),\n        answer1: yup\n            .number(\"This answer must be a number\")\n            .required(\"This answer is required.\")\n            .min(0, \"number must be 0-10\")\n            .max(10, \"number must be 0-10\"),\n        answer2: yup.string().required(\"This answer is required.\"),\n        answer3: yup.string().required(\"This answer is required.\"),\n        answer4: yup.string().required(\"This answer is required.\"),\n        answer5: yup.string().required(\"This answer is required.\"),\n        answer6: yup.string().required(\"This answer is required.\"),\n        answer7: yup.string().required(\"This answer is required.\"),\n        answer8: yup.string().required(\"This answer is required.\"),\n        answer9: yup.string().required(\"This answer is required.\"),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            answer0: \"\",\n            answer1: \"\",\n            answer2: \"\",\n            answer3: \"\",\n            answer4: \"\",\n            answer5: \"\",\n            answer6: \"\",\n            answer7: \"\",\n            answer8: \"\",\n            answer9: \"\",\n        },\n        onSubmit: async (values) => {\n            try {\n                const data = {\n                    date: new Date().toISOString(),\n                    username: state.user.username,\n                    user: state.user._id,\n                    responses: [\n                        {\n                            question: questions[0].text,\n                            answer: values.answer0,\n                        },\n                        {\n                            question: questions[1].text,\n                            answer: values.answer1,\n                        },\n                        {\n                            question: questions[2].text,\n                            answer: values.answer2,\n                        },\n                        {\n                            question: questions[3].text,\n                            answer: values.answer3,\n                        },\n                        {\n                            question: questions[4].text,\n                            answer: values.answer4,\n                        },\n                        {\n                            question: questions[5].text,\n                            answer: values.answer5,\n                        },\n                        {\n                            question: questions[6].text,\n                            answer: values.answer6,\n                        },\n                        {\n                            question: questions[7].text,\n                            answer: values.answer7,\n                        },\n                        {\n                            question: questions[8].text,\n                            answer: values.answer8,\n                        },\n                        {\n                            question: questions[9].text,\n                            answer: values.answer9,\n                        },\n                    ],\n                };\n                const res = await postNewEntry(data);\n                if (res.status === \"success\") {\n                    toast.success(\"🦄 Entry Submitted!\", {\n                        position: \"top-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                    setIsError(false);\n                    router.push(\"/\");\n                } else {\n                    setIsError(true);\n                }\n            } catch (err) {\n                toast.error(`There was an error submitting your entry`, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                console.log(err);\n                setIsError(true);\n            }\n        },\n        validationSchema: schema,\n    });\n\n    if (!state.user) {\n        return <div>loading</div>;\n    }\n    if (!state.user.username) {\n        return (\n            <div className=\"flex flex-col items-center justify-center min-h-screen py-2\">\n                You must provide a name in the homepage to access Reflect\n            </div>\n        );\n    }\n    return (\n        <div className=\"pt-12 bg-gray-50 w-screen h-screen\">\n            <div className=\"flex justify-center\">\n                <p className=\"font-bold text-4xl mb-12\">Daily Reflection</p>\n            </div>\n            <form\n                className=\"flex justify-center\"\n                onSubmit={formik.handleSubmit}\n            >\n                <div className=\"flex flex-col items-center w-full\">\n                    {questions.map((q) => (\n                        <FormFormik\n                            formikProps={formik.getFieldProps(`answer${q.num}`)}\n                            key={q.text}\n                            name={`answer${q.num}`}\n                            question={q.text}\n                            height={q.height}\n                            width={q.width}\n                            type={q.type}\n                            justify={q.justify}\n                            error={\n                                eval(`formik.errors.answer${q.num}`) &&\n                                eval(`formik.touched.answer${q.num}`)\n                            }\n                            test={eval(`formik.errors.answer${q.num}`)}\n                        />\n                    ))}\n                    <button\n                        type=\"submit\"\n                        className=\"shadow-blue-600 hover:text-blue-600 hover:bg-gray-50 bg-blue-600 text-gray-50 inline-flex items-center mb-6 px-6 py-3 border border-transparent text-base font-medium rounded-full shadow-xl \"\n                    >\n                        Sumbit Reflection\n                    </button>\n                    {isError ? (\n                        <p className=\"text-base text-red-600\">\n                            There was an error submitting your form\n                        </p>\n                    ) : null}\n                </div>\n            </form>\n            <Spacer height={24} />\n        </div>\n    );\n}\n\nexport async function getServerSideProps(context) {\n    try {\n        const cookies = parseCookies(context);\n        const { data } = await axios.get(\"http://localhost:8000/api/v1/auth\", {\n            headers: {\n                token: cookies.token,\n            },\n        });\n        const authorized = data.ok;\n\n        return {\n            props: { authorized }, // will be passed to the page component as props\n        };\n    } catch (err) {\n        return {\n            redirect: {\n                permanent: false,\n                destination: \"/signin\",\n            },\n        };\n    }\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport FormFormik from \"../components/formFormik\";\nimport { Context } from \"../context\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { updateUser } from \"../api/userAPI\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { getUserEntries } from \"../api/entriesAPI\";\n\nexport default function Home() {\n    const { state } = useContext(Context);\n    const { data, isLoading, isError } = useQuery(\"entries\", () =>\n        getUserEntries(\"612fd1549ee498699064250e\")\n    );\n\n    const schema = yup.object({\n        username: yup.string().required(\"This answer is required\"),\n    });\n    const formik = useFormik({\n        initialValues: {\n            username: \"\",\n        },\n        onSubmit: async (values) => {\n            try {\n                const username = values.username;\n                const res = await updateUser(state.user._id, {\n                    username: username,\n                });\n                window.location.reload(window.location.pathname);\n            } catch (err) {\n                console.log(err);\n            }\n        },\n        validationSchema: schema,\n    });\n\n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen py-2\">\n            <div>Hello there {!state.user ? null : state.user.username}</div>\n\n            {state.user && !state.user.username ? (\n                <form onSubmit={formik.handleSubmit}>\n                    <FormFormik\n                        formikProps={formik.getFieldProps(`username`)}\n                        name={`username`}\n                        question={\"username\"}\n                        type={\"text\"}\n                        justify={\"self-start\"}\n                        error={\n                            eval(`formik.errors.username`) &&\n                            eval(`formik.touched.username`)\n                        }\n                        test={eval(`formik.errors.username`)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                        Submit Username\n                    </button>\n                </form>\n            ) : null}\n\n            {!isLoading && !isError ? (\n                <>\n                    <div>WOAHHHHHHHHH</div>\n                    <div>{data.data.entries[0].responses[0].question}</div>\n                </>\n            ) : null}\n        </div>\n    );\n}\n","import axios from \"axios\";\n\nconst Users = axios.create({\n    baseURL: `https://daily-reflection-server.herokuapp.com/api/v1/users`,\n});\n\nconst updateUser = async (id, data) => {\n    const response = await Users.post(`/update/${id}`, data);\n    return response.data;\n};\n\nexport { updateUser };\nexport default Users;\n","import { getAuth } from \"@firebase/auth\";\nimport axios from \"axios\";\n\nconst Auth = axios.create({\n    baseURL: `https://daily-reflection-server.herokuapp.com/api/v1/auth`,\n});\n\n// Inserts auth token into header for every Auth request\nAuth.interceptors.request.use(\n    async (config) => {\n        let user = await getAuth().currentUser;\n        config.headers.token = user ? await user.getIdToken(true) : \"\";\n        return config;\n    },\n    (err) => Promise.reject(err)\n);\n\nexport default Auth;\n","import { getAuth, onIdTokenChanged } from \"@firebase/auth\";\nimport React, { useEffect, useContext } from \"react\";\nimport { Context } from \"./index\";\nimport Auth from \"../api/authAPI\";\nimport { initializeApp } from \"firebase/app\";\nimport { setCookie, destroyCookie } from \"nookies\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAch4RuvJZQch2kA6Gn085VU_VvKUP9254\",\n    authDomain: \"reflect-a1e61.firebaseapp.com\",\n    projectId: \"reflect-a1e61\",\n    storageBucket: \"reflect-a1e61.appspot.com\",\n    messagingSenderId: \"47538440852\",\n    appId: \"1:47538440852:web:a9de027b7e0d9b360c0281\",\n};\n\nconst FirebaseAuthState = ({ children }) => {\n    const { dispatch } = useContext(Context);\n\n    useEffect(() => {\n        initializeApp(firebaseConfig);\n        const auth = getAuth();\n        return onIdTokenChanged(auth, async (user) => {\n            if (user) {\n                try {\n                    const { token } = await user.getIdTokenResult();\n                    destroyCookie(null, \"token\");\n                    setCookie(null, \"token\", token, {});\n\n                    const response = await Auth.post(\"/user\", {});\n\n                    dispatch({\n                        type: \"LOGIN\",\n                        payload: response.data.user,\n                    });\n                } catch (err) {\n                    console.log(err);\n                }\n            } else {\n                destroyCookie(null, \"token\");\n                setCookie(null, \"token\", \"\", {});\n                dispatch({\n                    type: \"LOGOUT\",\n                });\n            }\n        });\n    }, []);\n\n    return <>{children}</>;\n};\n\nexport default FirebaseAuthState;\n","/* This example requires Tailwind CSS v2.0+ */\nimport { useContext } from \"react\";\nimport { Disclosure, Menu } from \"@headlessui/react\";\nimport { BellIcon, MenuIcon, XIcon } from \"@heroicons/react/outline\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nexport default function Navbar() {\n    const { state, dispatch } = useContext(Context);\n    const { user } = state;\n    const router = useHistory();\n    const handleLogOut = () => {\n        dispatch({\n            type: \"LOGOUT\",\n        });\n        router.push(\"/signin\");\n    };\n    let { pathname } = useLocation();\n    const tab = pathname;\n    const mobileHighlighted =\n        \"bg-indigo-50 border-indigo-500 text-indigo-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\";\n    const mobileDefault =\n        \"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\";\n\n    const navHighlightedStyle =\n        \"border-blue-600 text-gray-900 inline-flex items-center px-1 pt-1 pb-3 border-b-2 text-sm font-medium \";\n    const navDefaultStyle =\n        \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 pb-3 border-b-2 text-sm font-medium\";\n\n    return (\n        <Disclosure as=\"nav\" className=\"bg-white shadow absolute w-full\">\n            {({ open }) => (\n                <>\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                        <div className=\"flex justify-between h-16 \">\n                            <div className=\"flex\">\n                                <div className=\"hidden sm:ml-6 sm:flex sm:space-x-8 items-end\">\n                                    {/* Current: \"border-indigo-500 text-gray-900\", Default: \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\" */}\n                                    <Link to=\"/\">\n                                        <a\n                                            href=\"#\"\n                                            className={\n                                                tab === \"/\"\n                                                    ? navHighlightedStyle\n                                                    : navDefaultStyle\n                                            }\n                                        >\n                                            Home\n                                        </a>\n                                    </Link>\n                                    <Link to=\"/reflect\">\n                                        <a\n                                            href=\"#\"\n                                            className={\n                                                tab === \"/reflect\"\n                                                    ? navHighlightedStyle\n                                                    : navDefaultStyle\n                                            }\n                                        >\n                                            Reflect\n                                        </a>\n                                    </Link>\n                                </div>\n                            </div>\n                            <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n                                <button\n                                    type=\"button\"\n                                    className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                >\n                                    <span className=\"sr-only\">\n                                        View notifications\n                                    </span>\n                                    <BellIcon\n                                        className=\"h-6 w-6\"\n                                        aria-hidden=\"true\"\n                                    />\n                                </button>\n\n                                {/* Profile dropdown */}\n                                <Menu as=\"div\" className=\"ml-3 relative\">\n                                    <div>\n                                        {!user ? (\n                                            <Link to=\"/signin\">\n                                                <a\n                                                    href=\"#\"\n                                                    className=\"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\n                                                >\n                                                    Log In\n                                                </a>\n                                            </Link>\n                                        ) : (\n                                            <Link to=\"/signin\">\n                                                <a\n                                                    href=\"#\"\n                                                    onClick={handleLogOut}\n                                                    className=\"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\n                                                >\n                                                    Log Out\n                                                </a>\n                                            </Link>\n                                        )}\n                                    </div>\n                                </Menu>\n                            </div>\n                            <div className=\"-mr-2 flex items-center sm:hidden\">\n                                {/* Mobile menu button */}\n                                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                                    <span className=\"sr-only\">\n                                        Open main menu\n                                    </span>\n                                    {open ? (\n                                        <XIcon\n                                            className=\"block h-6 w-6\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    ) : (\n                                        <MenuIcon\n                                            className=\"block h-6 w-6\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    )}\n                                </Disclosure.Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Disclosure.Panel className=\"sm:hidden\">\n                        <div className=\"pt-2 pb-3 space-y-1\">\n                            {/* Current: \"bg-indigo-50 border-indigo-500 text-indigo-700\", Default: \"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700\" */}\n                            <Link to=\"/\">\n                                <a\n                                    href=\"#\"\n                                    className={\n                                        tab === \"/\"\n                                            ? mobileHighlighted\n                                            : mobileDefault\n                                    }\n                                >\n                                    Home\n                                </a>\n                            </Link>\n                            <Link to=\"/reflect\">\n                                <a\n                                    href=\"#\"\n                                    className={\n                                        tab === \"/reflect\"\n                                            ? mobileHighlighted\n                                            : mobileDefault\n                                    }\n                                >\n                                    Reflect\n                                </a>\n                            </Link>\n                        </div>\n                        <div className=\"pt-4 pb-3 border-t border-gray-200\">\n                            <div className=\"flex items-center px-4\">\n                                <div className=\"flex-shrink-0\"></div>\n                                <div className=\"ml-3\">\n                                    <div className=\"text-base font-medium text-gray-800\">\n                                        {user ? user.username : null}\n                                    </div>\n                                    <div className=\"text-sm font-medium text-gray-500\">\n                                        {user ? user.email : null}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mt-3 space-y-1\">\n                                <Link to=\"/signin\">\n                                    <a\n                                        href=\"#\"\n                                        onClick={handleLogOut}\n                                        className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\n                                    >\n                                        Log out\n                                    </a>\n                                </Link>\n                            </div>\n                        </div>\n                    </Disclosure.Panel>\n                </>\n            )}\n        </Disclosure>\n    );\n}\n","import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { Form, Field, ErrorMessage, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Spacer from \"../components/Spacer\";\nimport { useHistory } from \"react-router\";\n\nconst SignInPage = () => {\n    const router = useHistory();\n\n    const initialValues = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const validationSchema = yup.object({\n        email: yup\n            .string()\n            .email(\"Please enter a valid email\")\n            .required(\"Please enter your email\"),\n\n        password: yup.string().required(\"Please enter a password\"),\n    });\n\n    const signInUser = async (values) => {\n        try {\n            const auth = getAuth();\n            const user = await signInWithEmailAndPassword(\n                auth,\n                values.email,\n                values.password\n            );\n\n            if (user) {\n                router.push(\"/\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen py-2 \">\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={signInUser}\n            >\n                <Form className=\" flex flex-col justify-center items-center w-80 h-72 shadow-lg rounded-xl bg-gray-50\">\n                    <div className=\"py-3 px-2  w-full flex justify-center flex-col items-center \">\n                        <Field\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Enter your email\"\n                            type=\"email\"\n                            className=\"border border-blue-600 px-4 py-1 rounded-md w-72 h-12\"\n                        />\n                        <ErrorMessage name=\"email\">\n                            {(msg) => (\n                                <div className=\"text-red-600 text-xs\">\n                                    {msg}\n                                </div>\n                            )}\n                        </ErrorMessage>\n                    </div>\n                    <div className=\"py-3 px-2\">\n                        <Field\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Enter your password\"\n                            type=\"password\"\n                            className=\"border border-blue-600 px-4 py-1 rounded-md w-72 h-12\"\n                        />\n                        <ErrorMessage name=\"password\">\n                            {(msg) => (\n                                <div className=\"text-red-600 text-xs\">\n                                    {msg}\n                                </div>\n                            )}\n                        </ErrorMessage>\n                    </div>\n\n                    <button\n                        className=\"px-12 py-4 my-4 text-xl bg-blue-600 rounded-full text-white\"\n                        type=\"submit\"\n                    >\n                        Sign In\n                    </button>\n                </Form>\n            </Formik>\n            <Spacer height={6} />\n            <p>\n                don't have an account?{\" \"}\n                <a\n                    className=\"text-blue-600\"\n                    href={\"/signup\"}\n                    onClick={() => router.push(\"/signup\")}\n                >\n                    Sign Up.\n                </a>\n            </p>\n        </div>\n    );\n};\n\nexport default SignInPage;\n","import { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { Form, Field, ErrorMessage, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Spacer from \"../components/Spacer\";\nimport { useHistory } from \"react-router\";\n\nconst SignUpPage = () => {\n    const router = useHistory();\n\n    const initialValues = {\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    };\n\n    const validationSchema = yup.object({\n        email: yup\n            .string()\n            .email(\"Please enter a valid email\")\n            .required(\"Please enter your email\"),\n\n        password: yup\n            .string()\n            .required(\"Please enter a password\")\n            .min(6, \"Password must be atleast six characters\"),\n        confirmPassword: yup\n            .string()\n            .required(\"Please confirm your password\")\n            .min(6, \"Password must be atleast 6 characters\")\n            .test(\n                \"passwords-match\",\n                \"Passwords do not match\",\n                function (value) {\n                    return this.parent.password === value;\n                }\n            ),\n    });\n\n    const registerUser = async (values) => {\n        try {\n            const auth = getAuth();\n            const user = await createUserWithEmailAndPassword(\n                auth,\n                values.email,\n                values.password\n            );\n            router.push(\"/\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen py-2\">\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={registerUser}\n            >\n                <Form className=\" flex flex-col justify-center items-center w-80 h-96 shadow-lg rounded-xl bg-gray-50\">\n                    <div className=\"py-3 px-2  w-full flex justify-center flex-col items-center\">\n                        <Field\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Enter your email\"\n                            type=\"email\"\n                            className=\"border border-blue-600 px-4 py-1 rounded-md w-72 h-12\"\n                        />\n                        <ErrorMessage name=\"email\">\n                            {(msg) => (\n                                <div className=\"text-red-600 text-xs\">\n                                    {msg}\n                                </div>\n                            )}\n                        </ErrorMessage>\n                    </div>\n                    <div className=\"py-3 px-2\">\n                        <Field\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Enter a password\"\n                            type=\"password\"\n                            className=\"border border-blue-600 px-4 py-1 rounded-md w-72 h-12\"\n                        />\n                        <ErrorMessage name=\"password\">\n                            {(msg) => (\n                                <div className=\"text-red-600 text-xs\">\n                                    {msg}\n                                </div>\n                            )}\n                        </ErrorMessage>\n                    </div>\n                    <div className=\"py-3 px-2\">\n                        <Field\n                            id=\"confirmPassword\"\n                            name=\"confirmPassword\"\n                            placeholder=\"Confirm password\"\n                            type=\"password\"\n                            className=\"border border-blue-600 px-4 py-1 rounded-md w-72 h-12\"\n                        />\n                        <ErrorMessage name=\"confirmPassword\">\n                            {(msg) => (\n                                <div className=\"text-red-600 text-xs\">\n                                    {msg}\n                                </div>\n                            )}\n                        </ErrorMessage>\n                    </div>\n                    <Spacer height={6} />\n                    <button\n                        className=\"px-12 py-4 my-4 text-xl bg-blue-600 rounded-full text-white\"\n                        type=\"submit\"\n                    >\n                        Sign Up\n                    </button>\n                </Form>\n            </Formik>\n            <Spacer height={6} />\n            <p>\n                already have an account?{\" \"}\n                <a\n                    className=\"text-blue-600\"\n                    href={\"/signin\"}\n                    onClick={() => router.push(\"/signin\")}\n                >\n                    Sign In.\n                </a>\n            </p>\n        </div>\n    );\n};\n\nexport default SignUpPage;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ReflectPage from \"./pages/ReflectPage\";\nimport Navbar from \"./components/Navbar\";\nimport { useLocation } from \"react-router-dom\";\nimport Spacer from \"./components/Spacer\";\nimport Home from \"./pages/Home\";\nimport SignInPage from \"./pages/SignInPage\";\nimport SignUpPage from \"./pages/SignUpPage\";\n\nconst Navigation = () => {\n    let { pathname } = useLocation();\n    return (\n        <>\n            {pathname !== \"/signin\" &&\n            pathname !== \"/signup\" &&\n            pathname !== \"/welcome\" ? (\n                <Navbar />\n            ) : null}\n            <Spacer height={12} />\n            <Switch>\n                <Route path=\"/reflect\">\n                    <ReflectPage />\n                </Route>\n\n                <Route path=\"/signin\">\n                    <SignInPage />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUpPage />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </>\n    );\n};\n\nexport default Navigation;\n","import { Provider } from \"./context/index\";\nimport FirebaseAuthState from \"./context/FirebaseAuthState\";\nimport { ToastContainer } from \"react-toastify\";\nimport Navigation from \"./Navigation\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n    return (\n        <Provider>\n            <FirebaseAuthState>\n                <QueryClientProvider client={queryClient}>\n                    <Router>\n                        <Navigation />\n                        <ToastContainer />\n                    </Router>\n                </QueryClientProvider>\n            </FirebaseAuthState>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"tailwindcss/tailwind.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","import { createContext, useReducer } from \"react\";\nimport { destroyCookie, setCookie } from \"nookies\";\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            return { ...state, user: action.payload };\n        case \"LOGOUT\":\n            destroyCookie(null, \"token\");\n            setCookie(null, \"token\", null, {});\n            return { ...state, user: null };\n        case \"UPDATE\":\n            return { ...state, user: action.payload };\n        default:\n            return state;\n    }\n};\n\nconst initialState = {\n    user: null,\n};\n\nconst Context = createContext({});\n\nconst Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const value = { state, dispatch };\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nexport { Context, Provider };\n","const Spacer = ({ height }) => {\n    const style = `w-full h-${height}`;\n    return <div className={style}></div>;\n};\n\nexport default Spacer;\n","import React from \"react\";\n\nconst FormFormik = ({\n    name,\n    height = \"h-5/6\",\n    formikProps,\n    question,\n    error,\n    test,\n    width = \"w-full\",\n    justify,\n    type,\n}) => {\n    return (\n        <div className=\"py-6 flex flex-col items-center w-11/12 h-auto\">\n            <label\n                htmlFor={name}\n                className=\"self-start text-xl font-sans font-semibold text-gray-900\"\n            >\n                {question}\n            </label>\n            {type === \"textarea\" ? (\n                <textarea\n                    id={name}\n                    name={name}\n                    type={type}\n                    className={`${width} ${height} ${justify} px-4 py-2 border-2 border-blue-600 rounded-lg bg-white my-2`}\n                    style={{ resize: \"none\", outline: \"none\" }}\n                    {...formikProps}\n                />\n            ) : type === \"number\" || type === \"text\" ? (\n                <input\n                    id={name}\n                    name={name}\n                    type={type}\n                    className={` ${justify} px-4 py-2 border-2 border-blue-600 rounded-lg bg-white my-2`}\n                    style={{ resize: \"none\", outline: \"none\" }}\n                    {...formikProps}\n                />\n            ) : null}\n            {error ? (\n                <p\n                    className=\" self-start text-sm font-bold text-red-500\"\n                    id=\"email-error\"\n                >\n                    {test.slice(0, 31)}\n                </p>\n            ) : null}\n        </div>\n    );\n};\n\nexport default FormFormik;\n","import axios from \"axios\";\n\nconst Entries = axios.create({\n    baseURL: `https://daily-reflection-server.herokuapp.com/api/v1/entries`,\n});\n\nconst postNewEntry = async (data) => {\n    const response = await Entries.post(\"/\", data);\n    return response.data;\n};\n\nconst getUserEntries = async (id) => {\n    const response = await Entries.get(`/${id}`);\n    return response.data;\n};\n\nexport { postNewEntry, getUserEntries };\nexport default Entries;\n"],"sourceRoot":""}